AWSTemplateFormatVersion: 2010-09-09

Parameters:
  BucketName:
    Type: String
    Default: b00932103-notes-system

Resources:

  # Text Extract Lambda
  NotesTextExtract:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'NotesTextExtract'
      Runtime: 'python3.8'
      Handler: 'notesTextract.lambda_handler'
      Role: arn:aws:iam::967969319497:role/LabRole
      Code:
        S3Bucket: 'b00932103backend'
        S3Key: 'LambdaFunctions/notesTextract.zip'
      Timeout: 10

  NotesS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt NotesTextExtract.Arn
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      # AccessControl: PublicRead
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - PUT
              - POST
              - DELETE
              - GET
            AllowedOrigins:
              - "*"

  NotesBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref NotesS3Bucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${NotesS3Bucket}/*"
          - Effect: Allow
            Principal: "*"
            Action: s3:PutObject
            Resource: !Sub "arn:aws:s3:::${NotesS3Bucket}/*"



  

  NotesTextExtractInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref NotesTextExtract
      Principal: s3.amazonaws.com
      SourceArn: !Sub arn:aws:s3:::${BucketName}


  # LambdaRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #       - Effect: Allow
  #         Principal:
  #           Service: lambda.amazonaws.com
  #         Action:
  #         - sts:AssumeRole
  #     Path: '/'
  #     Policies:
  #     - PolicyName: s3
  #       PolicyDocument:
  #         Statement:
  #         - Effect: Allow
  #           Action:
  #             - s3:Get*
  #           Resource:
  #             - !Sub arn:aws:s3:::${BucketName}
  #             - !Sub arn:aws:s3:::${BucketName}/*

  
  
  # LambdaRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     RoleName: LambdaRole
  #     AssumeRolePolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service: lambda.amazonaws.com
  #           Action: sts:AssumeRole
  #     Policies:
  #       - PolicyName: LambdaReadS3Policy
  #         PolicyDocument:
  #           Version: '2012-10-17'
  #           Statement:
  #             - Effect: Allow
  #               Action: s3:GetObject
  #               Resource: !Sub arn:aws:s3:::${NotesS3Bucket}/*

  
Outputs:
  NotesBucketName:
    Value: !Ref NotesS3Bucket
    Description: The name of the S3 bucket for notes